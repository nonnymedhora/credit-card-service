package org.bawaweb.server.dao;

import org.bawaweb.core.model.CardAuditLog;
import org.bawaweb.core.model.CustomerCard;
import org.bawaweb.core.model.RequestType;
import org.bawaweb.server.EntityManagerUtil;
import org.junit.Before;
import org.junit.Test;

import java.sql.*;

import static org.junit.Assert.assertEquals;

/**
 * Created by medhoran on 12/10/13.
 */
public class CardAuditLogDAOImplTest {

    private CardAuditLogDAOImpl cardAuditLogDAO;

    @Before
    public void setUp() throws Exception {
        // note that we are using the same properties file
        // but is on another location in the server's file system
        // TODO: write utility class to find proper properties file?
        final String propFilePath = System.getProperty("user.home") + System.getProperty("file.separator") + "app.properties";
        EntityManagerUtil.initialize(propFilePath);
        cardAuditLogDAO = new CardAuditLogDAOImpl();
    }

    @Test
    public void testAddCardAuditLog() throws Exception {
        // get sample card
        /*CustomerCard customerCard = getSampleDBCard();
        final String cardId = customerCard.getCardId();*/

        final String cardId = getSampleCardId();
        System.out.println("CardID found is " + cardId);

        // create card audit log
        CardAuditLog cardAuditLog = new CardAuditLog();

        cardAuditLog.setCustomerId(99997788);
        cardAuditLog.setCardId(cardId);
        cardAuditLog.setSessionId("2222");            // here we are just setting an arbitrary number
        // we will not be using the request id for assertion testing as it is system generated by the rest server
        cardAuditLog.setClientId(987687);
        cardAuditLog.setConciergeId(9876543);
        cardAuditLog.setRequestType(RequestType.ADD.getRequestType());
        cardAuditLog.setCreatedBy("Me12344");
        cardAuditLog.setUserId(33333333);

        // insert using the dao
        cardAuditLogDAO.beginAndClear();

        boolean added = cardAuditLogDAO.addCardAuditLog(cardAuditLog);
        cardAuditLogDAO.commit();
        cardAuditLogDAO.close();

        // check that the record was added
        assertEquals(true, added);

        // retrieve using jdbc
        CardAuditLog dbLog = getDBInfoCardAuditLog(cardId);
        Integer auditId = dbLog.getAuditId();
        assertEquals(cardAuditLog.getCardId(), dbLog.getCardId());
        assertEquals(cardAuditLog.getClientId(), dbLog.getClientId());
        assertEquals(cardAuditLog.getClientId(), dbLog.getClientId());
        assertEquals(cardAuditLog.getConciergeId(), dbLog.getConciergeId());
        assertEquals(cardAuditLog.getCustomerId(), dbLog.getCustomerId());
//        assertEquals(cardAuditLog.getSessionId(), dbLog.getSessionId());
        assertEquals(cardAuditLog.getRequestType(), dbLog.getRequestType());
        assertEquals(cardAuditLog.getUserId(), dbLog.getUserId());
        assertEquals(cardAuditLog.getCreatedBy(), dbLog.getCreatedBy());


        // delete the record
        deleteFromCardAuditLog(auditId, cardId);

    }

    private String getSampleCardId() {
        // get a card using jdbc
        final int LIMIT = 1;
        String encryptedCardNumber = null;
        String cardId = null;
        Connection conn = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager
                    .getConnection("jdbc:mysql://sac_nonprod_db:3306/bw_services_secure", "bw_ws", "bwwsftw");
            String getCardNumberForCustomer = "select * from customer_card limit ?";
            PreparedStatement ps1 = conn
                    .prepareStatement(getCardNumberForCustomer);
            ps1.setInt(1, LIMIT);
            ResultSet rs = ps1.executeQuery();

            while (rs.next()) {
                cardId = rs.getString("card_id");
            }

            conn.close();
        } catch (Exception e) {
            try {
                conn.close();
            } catch (SQLException e1) {
                e1.printStackTrace();
            }
            e.printStackTrace();
        }

        return cardId;

    }

    private CustomerCard getSampleDBCard() {
        CustomerCard aCard = null;

        final int LIMIT = 1;
        String cardId = null;
        Connection conn = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager
                    .getConnection("jdbc:mysql://sac_nonprod_db:3306/bw_services_secure", "bw_ws", "bwwsftw");
            String getCardNumberForCustomer = "select * from customer_card limit ?";
            PreparedStatement ps1 = conn
                    .prepareStatement(getCardNumberForCustomer);
            ps1.setInt(1, LIMIT);
            ResultSet rs = ps1.executeQuery();
System.out.println("rs - is null ----- " + rs==null);

            if (rs.next()) {
                aCard.setCardId(rs.getString("card_id"));

            }


            conn.close();
        } catch (Exception e) {
            try {
                conn.close();
            } catch (SQLException e1) {
                e1.printStackTrace();
            }
            e.printStackTrace();
        }


        return aCard;
    }

    private void deleteFromCardAuditLog(Integer auditId, String cardId) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager
                    .getConnection("jdbc:mysql://sac_nonprod_db:3306/bw_services_secure", "bw_ws", "bwwsftw");
            String getCardNumberForCustomer = "delete from card_audit_log where audit_id = ? and card_id = ?";
            PreparedStatement ps1 = conn
                    .prepareStatement(getCardNumberForCustomer);
            ps1.setInt(1, auditId);
            ps1.setString(2, cardId);
            int result = ps1.executeUpdate();
            assertEquals(1, result);

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private CardAuditLog getDBInfoCardAuditLog(final String cardId) {
        CardAuditLog dbRecord = new CardAuditLog();
        // retrieve the inserted object using jdbc
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager
                    .getConnection("jdbc:mysql://sac_nonprod_db:3306/bw_services_secure", "bw_ws", "bwwsftw");

            String getCardNumberForCustomer = "select * from card_audit_log where card_id = ?";
            PreparedStatement ps1 = conn
                    .prepareStatement(getCardNumberForCustomer);
            ps1.setString(1, cardId);
            ResultSet rs = ps1.executeQuery();

            if (rs.next()) {
                dbRecord.setAuditId(rs.getInt("audit_id"));
                dbRecord.setCardId(rs.getString("card_id"));
                dbRecord.setClientId(rs.getInt("client_id"));
                dbRecord.setCreatedBy(rs.getString("created_by"));
                dbRecord.setCreationDate(rs.getTimestamp("creation_date"));
                dbRecord.setModifiedBy(rs.getString("modified_by"));
                dbRecord.setModificationDate(rs.getTimestamp("modification_date"));
                dbRecord.setConciergeId(rs.getInt("concierge_id"));
                dbRecord.setCustomerId(rs.getInt("customer_id"));
                dbRecord.setSessionId(rs.getString("session_id"));
                dbRecord.setRequestType(rs.getString("request_type").charAt(0));
                dbRecord.setUserId(rs.getInt("user_id"));

            }
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return dbRecord;
    }
}
